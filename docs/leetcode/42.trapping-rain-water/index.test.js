import { trap, trapV0, trapV2 } from './index.js';
import { runTestSuite } from '../utils/autoRunTest.js';

const testUnits = {
  'trapV0 暴力破解': {
    '空数组': [[[]], 0, trapV0],
    '典型例子': [[[0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]], 6, trapV0],
    '高低交错': [[[4, 2, 0, 3, 2, 5]], 9, trapV0],
    '变种例子': [[[1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]], 6, trapV0],
    '两端高': [[[2, 0, 2]], 2, trapV0],
    '多重低谷': [[[3, 0, 0, 2, 0, 4]], 10, trapV0],
  },
  'trapV2 动态规划': {
    '空数组': [[[]], 0, trapV2],
    '典型例子': [[[0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]], 6, trapV2],
    '高低交错': [[[4, 2, 0, 3, 2, 5]], 9, trapV2],
    '变种例子': [[[1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]], 6, trapV2],
    '两端高': [[[2, 0, 2]], 2, trapV2],
    '多重低谷': [[[3, 0, 0, 2, 0, 4]], 10, trapV2],
  },
  'trap 单调栈': {
    '空数组': [[[]], 0, trap],
    '典型例子': [[[0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]], 6, trap],
    '高低交错': [[[4, 2, 0, 3, 2, 5]], 9, trap],
    '变种例子': [[[1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]], 6, trap],
    '两端高': [[[2, 0, 2]], 2, trap],
    '多重低谷': [[[3, 0, 0, 2, 0, 4]], 10, trap],
  }
};

runTestSuite(testUnits);
